//Create an inteface rotate with the given functions.
import java.util.*;

interface Rotate {
     void leftRotate(int arr[], int d, int n);

     void leftRotatebyOne(int arr[], int n);

     void printArray(int arr[], int n);
}

class Main implements Rotate {
     public void leftRotate(int arr[], int d, int n) {
          for (int i = 0; i < d; i++)
               leftRotatebyOne(arr, n);
     }

     public void leftRotatebyOne(int arr[], int n) {
          int i, temp;
          temp = arr[0];
          for (i = 0; i < n - 1; i++)
               arr[i] = arr[i + 1];
          arr[i] = temp;
     }

     public void printArray(int arr[], int n) {
          for (int i = 0; i < n; i++)
               System.out.print(arr[i] + " ");
     }

     public static void main(String[] args) {
          Main rotate = new Main();
          int n;
          Scanner scan = new Scanner(System.in);
          n = scan.nextInt();
          int arr[] = new int[n];
          for (int i = 0; i < n; i++) {
               arr[i] = scan.nextInt();
          }
          rotate.leftRotate(arr, 1, n);
          rotate.printArray(arr, n);

          scan.close();
     }
}
***************************************************************************
//Program to count a minimum number of front moves to sort an array.
import java.util.*;

interface Move {
     int minmoves(int arr[], int n);
}

class Main implements Move {
     public int minmoves(int arr[], int n) {
          int expectedItem = n;
          for (int i = n - 1; i >= 0; i--) {
               if (arr[i] == expectedItem)
                    expectedItem--;
          }
          System.out.print(expectedItem);
          return expectedItem;
     }

     public static void main(String[] args) {
          Scanner scan = new Scanner(System.in);
          int n;
          n = scan.nextInt();
          int arr[] = new int[n];
          for (int i = 0; i < n; i++) {
               arr[i] = scan.nextInt();
          }
          Main obj = new Main();
          obj.minmoves(arr, n);

          scan.close();
     }
}
********************************************************************************************
//Create an interface ShapeCalculator.
import java.util.*;

interface ShapeCalculator {
     void calc(int n);
}

class Square implements ShapeCalculator {
     int ar, pr;

     public void calc(int s) {
          ar = s * s;
          pr = 4 * s;
          System.out.print(ar + " " + pr + "\n");
     }
}

class Circle implements ShapeCalculator {
     double ar, pr;
     double pi = 3.14;

     public void calc(int r) {
          ar = Math.round(pi * r * r * 100.0) / 100.0;
          pr = Math.round(2 * pi * r * 100.0) / 100.0;
          System.out.println(ar + " " + pr);
     }
}

class CalcMain {
     public static void main(String args[]) {
          int n;
          Scanner scan = new Scanner(System.in);
          n = scan.nextInt();
          Square sq = new Square();
          sq.calc(n);
          Circle cr = new Circle();
          cr.calc(n);

          scan.close();
     }
}
